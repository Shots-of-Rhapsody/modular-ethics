name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Keep only one CI run per ref to reduce noise
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build & Test (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build --if-present

      - name: Test with coverage
        run: npm test -- --coverage --ci

      - name: Upload coverage artifact (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node }}
          path: |
            coverage
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          flags: frontend
          fail_ci_if_error: true
          verbose: true

  link-check:
    name: Link Check (lychee)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lychee Link Checker
        uses: lycheeverse/lychee-action@v1
        with:
          args: --config lychee.toml --no-progress --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: block merges unless both jobs pass
  gate:
    name: Status Gate
    runs-on: ubuntu-latest
    needs: [build-and-test, link-check]
    steps:
      - run: echo "All checks passed."
